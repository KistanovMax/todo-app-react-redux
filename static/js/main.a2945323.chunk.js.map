{"version":3,"sources":["redux/actions/actions.js","components/CurrentDate/CurrentDate.js","components/SVG/Logo.js","components/Header/Header.js","components/SVG/Done.js","components/SVG/Important.js","components/SVG/Trash.js","components/TodoListItem/TodoListItem.js","components/ModalWindow/ModalWindow.js","components/ControlPanel/ControlPanel.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","components/App/App.js","redux/reducers/todoReducer.js","redux/reducers/dateReducer.js","redux/reducers/todoCounter.js","redux/reducers/reducers.js","redux/store/store.js","index.js"],"names":["addTodo","title","todoId","type","payload","CurrentDate","dispatch","useDispatch","date","Date","currentDate","getMonth","getDate","useEffect","transferDate","getCurrentDate","className","Logo","width","height","viewBox","fill","xmlns","fillRule","d","Header","Done","Important","Trash","TodoListItem","isDone","isImportant","tooggleDone","tooggleImportant","clickTrashButton","classNames","onClick","React","memo","ModalWindow","counter","isOpen","setIsOpen","clickDeleteCompletedTodos","aria-hidden","ControlPanel","useState","TodoList","useSelector","state","dateReducer","todosArr","todoReducer","todoCounter","useCallback","deleteTodo","isTodoDone","todoDone","isTodoImportant","todoImportant","length","map","todo","id","TodoForm","setTitle","uuid","typeTitleText","event","target","value","pressEnter","keyCode","onChange","onKeyDown","placeholder","disabled","clickAddButton","App","initialState","action","filter","reducers","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2945323.chunk.js","sourcesContent":["export const addTodo = (title, todoId) => ({\r\n  type: 'ADD_TODO',\r\n  payload: { title, todoId },\r\n});\r\n\r\nexport const deleteTodo = (todoId) => ({\r\n  type: 'DELETE_TODO',\r\n  payload: todoId,\r\n});\r\n\r\nexport const todoDone = (todoId, isTodoDone) => ({\r\n  type: 'TODO_DONE',\r\n  payload: { todoId, isTodoDone },\r\n});\r\n\r\nexport const todoImportant = (todoId, isTodoImportant) => ({\r\n  type: 'TODO_IMPORTANT',\r\n  payload: { todoId, isTodoImportant },\r\n});\r\n\r\nexport const deleteCompletedTodos = () => ({\r\n  type: 'DELETE_COMPLETED_TODOS',\r\n});\r\n\r\nexport const transferDate = (currentDate) => ({\r\n  type: 'TRANSFER_DATE',\r\n  payload: currentDate,\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './CurrentDate.css';\r\n\r\nimport { transferDate } from '../../redux/actions/actions';\r\n\r\nexport default function CurrentDate() {\r\n  const dispatch = useDispatch();\r\n  const getCurrentDate = (currentDate) =>\r\n    dispatch(transferDate(currentDate));\r\n\r\n  const monthArr = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const date = new Date();\r\n  const currentDate = `${\r\n    monthArr[date.getMonth()]\r\n  }, ${date.getDate()}`;\r\n\r\n  useEffect(() => {\r\n    getCurrentDate(currentDate);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentDate]);\r\n\r\n  return <div className='date'>{currentDate}</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <svg\r\n      width='2em'\r\n      height='2em'\r\n      viewBox='0 0 16 16'\r\n      className='bi bi-check2-circle'\r\n      fill='currentColor'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <path\r\n        fillRule='evenodd'\r\n        d='M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z'\r\n      />\r\n      <path\r\n        fillRule='evenodd'\r\n        d='M8 2.5A5.5 5.5 0 1 0 13.5 8a.5.5 0 0 1 1 0 6.5 6.5 0 1 1-3.25-5.63.5.5 0 1 1-.5.865A5.472 5.472 0 0 0 8 2.5z'\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport CurrentDate from '../CurrentDate/CurrentDate';\r\nimport Logo from '../SVG/Logo';\r\n\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <nav className='navbar container'>\r\n      <div className='logo'>\r\n        <Logo />\r\n        <span className='navbar-brand h1'>important list</span>\r\n      </div>\r\n      <CurrentDate />\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Done() {\r\n  return (\r\n    <svg\r\n      width='1.7em'\r\n      height='1.7em'\r\n      viewBox='0 0 16 16'\r\n      className='bi bi-check2-square'\r\n      fill='currentColor'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <path\r\n        fillRule='evenodd'\r\n        d='M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z'\r\n      />\r\n      <path\r\n        fillRule='evenodd'\r\n        d='M1.5 13A1.5 1.5 0 0 0 3 14.5h10a1.5 1.5 0 0 0 1.5-1.5V8a.5.5 0 0 0-1 0v5a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V3a.5.5 0 0 1 .5-.5h8a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 3v10z'\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Important() {\r\n  return (\r\n    <svg\r\n      width='1.3em'\r\n      height='1.3em'\r\n      viewBox='0 0 16 16'\r\n      className='bi bi-exclamation-square'\r\n      fill='rgba(255, 102, 0)'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <path\r\n        fillRule='evenodd'\r\n        d='M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z'\r\n      />\r\n      <path d='M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z' />\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Trash() {\r\n  return (\r\n    <svg\r\n      width='1.7em'\r\n      height='1.7em'\r\n      viewBox='0 0 16 16'\r\n      className='bi bi-trash'\r\n      fill='currentColor'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n      <path\r\n        fillRule='evenodd'\r\n        d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Done from '../SVG/Done';\r\nimport Important from '../SVG/Important';\r\nimport Trash from '../SVG/Trash';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './TodoListItem.css';\r\n\r\nfunction TodoListItem({\r\n  title,\r\n  todoId,\r\n  date,\r\n  isDone,\r\n  isImportant,\r\n  tooggleDone,\r\n  tooggleImportant,\r\n  clickTrashButton,\r\n}) {\r\n  return (\r\n    <div className='card text-secondary mb-2'>\r\n      <div className='card-header bg-light text-secondary top-border-line'>\r\n        {date}\r\n        <button\r\n          className={classNames('button', { 'button done': isDone })}\r\n          onClick={() => tooggleDone(todoId, isDone)}\r\n        >\r\n          {isDone ? (\r\n            <div className='button-text-green'>Awesome!</div>\r\n          ) : (\r\n            <div className='button-text'>Done?</div>\r\n          )}\r\n          <Done />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className='card-body bg-light'\r\n        onClick={() => tooggleImportant(todoId, isImportant)}\r\n      >\r\n        <h5 className='card-title'>\r\n          {isImportant && <Important />}\r\n          {title}\r\n        </h5>\r\n        {isDone && (\r\n          <div className='card-buttons'>\r\n            <button\r\n              onClick={() => clickTrashButton(todoId)}\r\n              className='button trash'\r\n              type='button'\r\n            >\r\n              <div>\r\n                Delete? <Trash />\r\n              </div>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n  todoId: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  date: PropTypes.string,\r\n  isDone: PropTypes.bool,\r\n  isImportant: PropTypes.bool,\r\n  clickTrashButton: PropTypes.func.isRequired,\r\n  tooggleDone: PropTypes.func.isRequired,\r\n  tooggleImportant: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ModalWindow.css';\r\n\r\nexport default function ModalWindow({\r\n  counter,\r\n  isOpen,\r\n  setIsOpen,\r\n  clickDeleteCompletedTodos,\r\n}) {\r\n  return (\r\n    <div>\r\n      {isOpen && (\r\n        <div className='modal-window'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title'>Are you sure ?</h5>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                type='button'\r\n                className='button close'\r\n              >\r\n                <span aria-hidden='true'>X</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              You are going to delete {counter} completed todos\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                type='button'\r\n                className='btn btn-secondary gray'\r\n              >\r\n                No\r\n              </button>\r\n              <button\r\n                onClick={() => clickDeleteCompletedTodos(setIsOpen(false))}\r\n                type='button'\r\n                className='btn btn-secondary orange'\r\n              >\r\n                Yes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nModalWindow.propTypes = {\r\n  counter: PropTypes.number,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  setIsOpen: PropTypes.func.isRequired,\r\n  clickDeleteCompletedTodos: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport ModalWindow from '../ModalWindow/ModalWindow';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ControlPanel.css';\r\n\r\nexport default function ControlPanel({ counter, clickDeleteCompletedTodos }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const tooggleModal = () => {\r\n    if (counter > 0) {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ModalWindow\r\n        counter={counter}\r\n        isOpen={isOpen}\r\n        setIsOpen={setIsOpen}\r\n        clickDeleteCompletedTodos={clickDeleteCompletedTodos}\r\n      />\r\n      <div className='btn-group container fixed-top bg-white'>\r\n        <button\r\n          onClick={() => tooggleModal()}\r\n          type='button'\r\n          className='btn btn-secondary left-btn'\r\n        >\r\n          Delete {counter} todos\r\n        </button>\r\n        <button type='button' className='btn btn-secondary right-btn'>\r\n          Some function\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  counter: PropTypes.number,\r\n  clickDeleteCompletedTodos: PropTypes.func.isRequired,\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\nimport ControlPanel from '../ControlPanel/ControlPanel';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  deleteTodo,\r\n  todoDone,\r\n  todoImportant,\r\n  deleteCompletedTodos,\r\n} from '../../redux/actions/actions';\r\n\r\nimport './TodoList.css';\r\n\r\nfunction TodoList() {\r\n  const { date } = useSelector((state) => state.dateReducer);\r\n  const todosArr = useSelector((state) => state.todoReducer);\r\n  const counter = useSelector((state) => state.todoCounter);\r\n\r\n  const dispatch = useDispatch();\r\n  const clickTrashButton = useCallback(\r\n    (todoId) => {\r\n      dispatch(deleteTodo(todoId));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const tooggleDone = useCallback(\r\n    (todoId, isDone) => {\r\n      dispatch(todoDone(todoId, isDone));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const tooggleImportant = useCallback(\r\n    (todoId, isImportant) => {\r\n      dispatch(todoImportant(todoId, isImportant));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const clickDeleteCompletedTodos = useCallback(() => {\r\n    dispatch(deleteCompletedTodos());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className='todo-list-box container'>\r\n      {todosArr.length > 0 ? (\r\n        <ControlPanel\r\n          counter={counter}\r\n          clickDeleteCompletedTodos={clickDeleteCompletedTodos}\r\n        />\r\n      ) : null}\r\n      <div className='todo-list'>\r\n        {todosArr.map((todo) => (\r\n          <TodoListItem\r\n            key={todo.id}\r\n            title={todo.title}\r\n            todoId={todo.id}\r\n            isDone={todo.isDone}\r\n            isImportant={todo.isImportant}\r\n            date={date}\r\n            clickTrashButton={clickTrashButton}\r\n            tooggleDone={tooggleDone}\r\n            tooggleImportant={tooggleImportant}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todosArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      isDone: PropTypes.bool.isRequired,\r\n      isImportant: PropTypes.bool.isRequired,\r\n    }).isRequired\r\n  ),\r\n  date: PropTypes.string,\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport uuid from 'uuid/v4';\r\n\r\nimport './TodoForm.css';\r\n\r\nimport { addTodo } from '../../redux/actions/actions';\r\n\r\nfunction TodoForm() {\r\n  const [title, setTitle] = useState('');\r\n  const todoId = uuid();\r\n  const dispatch = useDispatch();\r\n\r\n  const clickAddButton = (title, todoId) => {\r\n    dispatch(addTodo(title, todoId));\r\n    setTitle('');\r\n  };\r\n\r\n  const typeTitleText = useCallback(\r\n    (event) => {\r\n      setTitle(event.target.value);\r\n    },\r\n    [setTitle]\r\n  );\r\n\r\n  const pressEnter = useCallback(\r\n    (event) => {\r\n      if (title && event.keyCode === 13) {\r\n        dispatch(addTodo(title, todoId));\r\n        setTitle('');\r\n      }\r\n    },\r\n    [dispatch, title, todoId]\r\n  );\r\n\r\n  return (\r\n    <div className='input-group container'>\r\n      <input\r\n        onChange={typeTitleText}\r\n        onKeyDown={pressEnter}\r\n        type='text'\r\n        className='form-control'\r\n        placeholder='New ToDo'\r\n        value={title}\r\n      />\r\n      <div className='input-group-append'>\r\n        <button\r\n          disabled={!title}\r\n          onClick={() => clickAddButton(title, todoId)}\r\n          className='btn btn-secondary'\r\n          type='button'\r\n        >\r\n          Add ToDo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoForm);\r\n","import React from 'react';\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport TodoForm from '../TodoForm/TodoForm';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div>\n      <div className='fixed-top bg-white'>\n        <Header />\n        <TodoForm />\n      </div>\n      <TodoList />\n    </div>\n  );\n}\n","const initialState = [];\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'ADD_TODO':\r\n      return (state = [\r\n        ...state,\r\n        {\r\n          id: payload.todoId,\r\n          title: payload.title,\r\n          isDone: false,\r\n          isImportant: false,\r\n        },\r\n      ]);\r\n\r\n    case 'DELETE_TODO':\r\n      return (state = [...state.filter((todo) => todo.id !== payload)]);\r\n\r\n    case 'TODO_DONE':\r\n      return state.map((todo) =>\r\n        todo.id === payload.todoId ? { ...todo, isDone: !payload.isTodoDone } : todo\r\n      );\r\n\r\n    case 'TODO_IMPORTANT':\r\n      return state.map((todo) =>\r\n        todo.id === payload.todoId\r\n          ? { ...todo, isImportant: !payload.isTodoImportant }\r\n          : todo\r\n      );\r\n\r\n    case 'DELETE_COMPLETED_TODOS':\r\n      return state.filter((todo) => todo.isDone === false);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","const initialState = {};\r\n\r\nconst dateReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'TRANSFER_DATE':\r\n      return (state = { ...state, date: payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dateReducer;\r\n","const todoCounter = (counter = 0, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'TODO_DONE':\r\n      return (counter += payload.isTodoDone ? -1 : +1);\r\n    case 'DELETE_TODO':\r\n      return (counter = 0 ? 0 : counter - 1);\r\n    case 'DELETE_COMPLETED_TODOS':\r\n      return (counter = 0);\r\n    default:\r\n      return counter;\r\n  }\r\n};\r\n\r\nexport default todoCounter;\r\n","import { combineReducers } from 'redux';\r\nimport todoReducer from './todoReducer';\r\nimport dateReducer from './dateReducer';\r\nimport todoCounter from './todoCounter';\r\n\r\nconst reducers = combineReducers({\r\n  todoReducer,\r\n  dateReducer,\r\n  todoCounter,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from '../reducers/reducers';\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}