{"version":3,"sources":["redux/actions/actions.js","components/CurrentDate/CurrentDate.js","components/Header/Header.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","components/App/App.js","redux/reducers/todoReducer.js","redux/reducers/dateReducer.js","redux/reducers/reducers.js","redux/store/store.js","index.js"],"names":["addTodo","title","todoId","type","payload","CurrentDate","dispatch","useDispatch","date","Date","currentDate","getMonth","getDate","useEffect","transferDate","getCurrentDate","className","Header","width","height","viewBox","fill","xmlns","fillRule","d","TodoListItem","isDone","isImportant","tooggleDone","tooggleImportant","clickTrashButton","doneButtonStyle","onClick","React","memo","TodoList","useSelector","state","dateReducer","todosArr","todoReducer","deleteTodo","isTodoDone","todoDone","isTodoImportant","todoImportant","map","todo","id","TodoForm","useState","setTitle","uuid","typeTitleText","useCallback","event","target","value","pressEnter","keyCode","onChange","onKeyDown","placeholder","disabled","clickAddButton","App","initialState","action","filter","reducers","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cb2d55d.chunk.js","sourcesContent":["export const addTodo = (title, todoId) => ({\r\n  type: 'ADD_TODO',\r\n  payload: { title, todoId },\r\n});\r\n\r\nexport const deleteTodo = (todoId) => ({\r\n  type: 'DELETE_TODO',\r\n  payload: todoId,\r\n});\r\n\r\nexport const todoDone = (todoId, isTodoDone) => ({\r\n  type: 'TODO_DONE',\r\n  payload: { todoId, isTodoDone },\r\n});\r\n\r\nexport const todoImportant = (todoId, isTodoImportant) => ({\r\n  type: 'TODO_IMPORTANT',\r\n  payload: { todoId, isTodoImportant },\r\n});\r\n\r\n\r\nexport const transferDate = (currentDate) => ({\r\n  type: 'TRANSFER_DATE',\r\n  payload: currentDate,\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './CurrentDate.css';\r\n\r\nimport { transferDate } from '../../redux/actions/actions';\r\n\r\nexport default function CurrentDate() {\r\n  const dispatch = useDispatch();\r\n  const getCurrentDate = (currentDate) =>\r\n    dispatch(transferDate(currentDate));\r\n\r\n  const monthArr = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const date = new Date();\r\n  const currentDate = `${\r\n    monthArr[date.getMonth()]\r\n  }, ${date.getDate()}`;\r\n\r\n  useEffect(() => {\r\n    getCurrentDate(currentDate);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentDate]);\r\n\r\n  return <div className='date'>{currentDate}</div>;\r\n}\r\n","import React from 'react';\r\nimport CurrentDate from '../CurrentDate/CurrentDate';\r\n\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <nav className='navbar container'>\r\n      <div className='logo'>\r\n        <svg\r\n          width='2em'\r\n          height='2em'\r\n          viewBox='0 0 16 16'\r\n          className='bi bi-check2-circle'\r\n          fill='currentColor'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z'\r\n          />\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M8 2.5A5.5 5.5 0 1 0 13.5 8a.5.5 0 0 1 1 0 6.5 6.5 0 1 1-3.25-5.63.5.5 0 1 1-.5.865A5.472 5.472 0 0 0 8 2.5z'\r\n          />\r\n        </svg>\r\n        <span className='navbar-brand h1'>important list</span>\r\n      </div>\r\n      <CurrentDate />\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TodoListItem.css';\r\n\r\nfunction TodoListItem({\r\n  title,\r\n  todoId,\r\n  date,\r\n  isDone,\r\n  isImportant,\r\n  tooggleDone,\r\n  tooggleImportant,\r\n  clickTrashButton,\r\n}) {\r\n  let doneButtonStyle = 'button';\r\n  if (isDone) {\r\n    doneButtonStyle += ' done';\r\n  }\r\n\r\n  return (\r\n    <div className='card text-secondary mb-2'>\r\n      <div className='card-header bg-light text-secondary'>\r\n        {date}\r\n        <button\r\n          className={doneButtonStyle}\r\n          onClick={() => tooggleDone(todoId, isDone)}\r\n        >\r\n          {isDone ? (\r\n            <div className='button-text-green'>Awesome!</div>\r\n          ) : (\r\n            <div className='button-text'>Done?</div>\r\n          )}\r\n          <svg\r\n            width='1.7em'\r\n            height='1.7em'\r\n            viewBox='0 0 16 16'\r\n            className='bi bi-check2-square'\r\n            fill='currentColor'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path\r\n              fillRule='evenodd'\r\n              d='M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z'\r\n            />\r\n            <path\r\n              fillRule='evenodd'\r\n              d='M1.5 13A1.5 1.5 0 0 0 3 14.5h10a1.5 1.5 0 0 0 1.5-1.5V8a.5.5 0 0 0-1 0v5a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V3a.5.5 0 0 1 .5-.5h8a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 3v10z'\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div\r\n        className='card-body bg-light'\r\n        onClick={() => tooggleImportant(todoId, isImportant)}\r\n      >\r\n        <h5 className='card-title'>\r\n          {isImportant && (\r\n            <svg\r\n              width='1.3em'\r\n              height='1.3em'\r\n              viewBox='0 0 16 16'\r\n              className='bi bi-exclamation-square'\r\n              fill='rgba(255, 102, 0)'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z'\r\n              />\r\n              <path d='M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z' />\r\n            </svg>\r\n          )}\r\n          {title}\r\n        </h5>\r\n        {isDone && (\r\n          <div className='card-buttons'>\r\n            <button\r\n              onClick={() => clickTrashButton(todoId)}\r\n              className='button trash'\r\n              type='button'\r\n            >\r\n              <div>\r\n                Delete?{' '}\r\n                <svg\r\n                  width='1.7em'\r\n                  height='1.7em'\r\n                  viewBox='0 0 16 16'\r\n                  className='bi bi-trash'\r\n                  fill='currentColor'\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                >\r\n                  <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n                  <path\r\n                    fillRule='evenodd'\r\n                    d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n  todoId: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  date: PropTypes.string,\r\n  isDone: PropTypes.bool,\r\n  isImportant: PropTypes.bool,\r\n  clickTrashButton: PropTypes.func.isRequired,\r\n  tooggleDone: PropTypes.func.isRequired,\r\n  tooggleImportant: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { deleteTodo } from '../../redux/actions/actions';\r\nimport { todoDone } from '../../redux/actions/actions';\r\nimport { todoImportant } from '../../redux/actions/actions';\r\n\r\nimport './TodoList.css';\r\n\r\nfunction TodoList() {\r\n  const { date } = useSelector((state) => state.dateReducer);\r\n  const todosArr = useSelector((state) => state.todoReducer);\r\n\r\n  const dispatch = useDispatch();\r\n  const clickTrashButton = (todoId) => dispatch(deleteTodo(todoId));\r\n\r\n  const tooggleDone = (todoId, isDone) =>\r\n    dispatch(todoDone(todoId, isDone));\r\n\r\n  const tooggleImportant = (todoId, isImportant) =>\r\n    dispatch(todoImportant(todoId, isImportant));\r\n\r\n  return (\r\n    <div className='todo-list'>\r\n      {todosArr.map((todo) => (\r\n        <TodoListItem\r\n          key={todo.id}\r\n          title={todo.title}\r\n          todoId={todo.id}\r\n          isDone={todo.isDone}\r\n          isImportant={todo.isImportant}\r\n          date={date}\r\n          clickTrashButton={clickTrashButton}\r\n          tooggleDone={tooggleDone}\r\n          tooggleImportant={tooggleImportant}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todosArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport uuid from 'uuid/v4';\r\n\r\nimport './TodoForm.css';\r\n\r\nimport { addTodo } from '../../redux/actions/actions';\r\n\r\nfunction TodoForm() {\r\n  const [title, setTitle] = useState('');\r\n  const todoId = uuid();\r\n  const dispatch = useDispatch();\r\n\r\n  const clickAddButton = (title, todoId) => {\r\n    dispatch(addTodo(title, todoId));\r\n    setTitle('');\r\n  };\r\n\r\n  const typeTitleText = useCallback(\r\n    (event) => {\r\n      setTitle(event.target.value);\r\n    },\r\n    [setTitle]\r\n  );\r\n\r\n  const pressEnter = useCallback(\r\n    (event) => {\r\n      if (title && event.keyCode === 13) {\r\n        dispatch(addTodo(title, todoId));\r\n        setTitle('');\r\n      }\r\n    },\r\n    [dispatch, title, todoId]\r\n  );\r\n\r\n  return (\r\n    <div className='input-group mb-3'>\r\n      <input\r\n        onChange={typeTitleText}\r\n        onKeyDown={pressEnter}\r\n        type='text'\r\n        className='form-control'\r\n        placeholder='New ToDo'\r\n        value={title}\r\n      />\r\n      <div className='input-group-append'>\r\n        <button\r\n          disabled={!title}\r\n          onClick={() => clickAddButton(title, todoId)}\r\n          className='btn btn-secondary'\r\n          type='button'\r\n        >\r\n          Add ToDo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoForm);\r\n","import React from 'react';\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport TodoForm from '../TodoForm/TodoForm';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className='container'>\n      <Header />\n      <TodoForm />\n      <TodoList />\n    </div>\n  );\n}\n","const initialState = [];\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'ADD_TODO':\r\n      return (state = [\r\n        ...state,\r\n        {\r\n          id: payload.todoId,\r\n          title: payload.title,\r\n          isDone: false,\r\n          isImportant: false,\r\n        },\r\n      ]);\r\n\r\n    case 'DELETE_TODO':\r\n      return (state = [\r\n        ...state.filter((todo) => todo.id !== payload),\r\n      ]);\r\n\r\n    case 'TODO_DONE':\r\n      return state.map((todo) =>\r\n        todo.id === payload.todoId\r\n          ? { ...todo, isDone: !payload.isTodoDone }\r\n          : todo\r\n      );\r\n\r\n    case 'TODO_IMPORTANT':\r\n      return state.map((todo) =>\r\n        todo.id === payload.todoId\r\n          ? { ...todo, isImportant: !payload.isTodoImportant }\r\n          : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","const initialState = {};\r\n\r\nconst dateReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'TRANSFER_DATE':\r\n      return (state = { ...state, date: payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dateReducer;\r\n","import { combineReducers } from 'redux';\r\nimport todoReducer from './todoReducer';\r\nimport dateReducer from './dateReducer';\r\n\r\nconst reducers = combineReducers({\r\n  todoReducer,\r\n  dateReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reducers from '../reducers/reducers'\r\n\r\nconst store = createStore(reducers, composeWithDevTools())\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}