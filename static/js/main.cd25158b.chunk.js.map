{"version":3,"sources":["components/CurrentDate/CurrentDate.js","components/Header/Header.js","components/TodoListItem/TodoListItem.js","redux/actions/actions.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","components/App/App.js","redux/reducers/todoReducer.js","redux/reducers/reducers.js","redux/store/store.js","index.js"],"names":["CurrentDate","date","Date","currentDate","getDate","getMonth","className","Header","width","height","viewBox","fill","xmlns","fillRule","d","TodoListItem","title","todoId","useState","isDone","setIsDone","dispatch","useDispatch","tooggleCheckbox","useCallback","doneButtonStyle","onClick","type","payload","deleteTodo","clickTrashButton","React","memo","TodoList","todosArr","useSelector","state","todoReducer","map","todo","id","TodoForm","setTitle","uuid","typeTitleText","event","target","value","onChange","placeholder","disabled","addTodo","clickAddkButton","App","initialState","action","filter","reducers","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd25158b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CurrentDate.css';\r\n\r\nexport default function CurrentDate() {\r\n  const monthArr = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const date = new Date();\r\n  const currentDate = `${date.getDate()} ${monthArr[date.getMonth()]}`;\r\n\r\n  return <div className='date'>{currentDate}</div>;\r\n}\r\n","import React from 'react';\r\nimport CurrentDate from '../CurrentDate/CurrentDate';\r\n\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <nav className='navbar container'>\r\n      <div className='logo'>\r\n        <svg\r\n          width='2em'\r\n          height='2em'\r\n          viewBox='0 0 16 16'\r\n          className='bi bi-check2-circle'\r\n          fill='currentColor'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z'\r\n          />\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M8 2.5A5.5 5.5 0 1 0 13.5 8a.5.5 0 0 1 1 0 6.5 6.5 0 1 1-3.25-5.63.5.5 0 1 1-.5.865A5.472 5.472 0 0 0 8 2.5z'\r\n          />\r\n        </svg>\r\n        <span className='navbar-brand h1'>important list</span>\r\n      </div>\r\n      <CurrentDate />\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { deleteTodo } from '../../redux/actions/actions';\r\n\r\nimport './TodoListItem.css';\r\n\r\nfunction TodoListItem({ title, todoId }) {\r\n  const [isDone, setIsDone] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const clickTrashButton = (todoId) => dispatch(deleteTodo(todoId));\r\n\r\n  const tooggleCheckbox = useCallback(() => {\r\n    setIsDone(!isDone);\r\n  }, [isDone]);\r\n\r\n  let doneButtonStyle = 'button';\r\n  if (isDone) {\r\n    doneButtonStyle += ' done';\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='card text-secondary mb-2'>\r\n        <div className='card-header bg-light text-secondary'>\r\n          14 November{' '}\r\n          <button className={doneButtonStyle} onClick={tooggleCheckbox}>\r\n            {isDone ? (\r\n              <div className='button-text-green'>Awesome!</div>\r\n            ) : (\r\n              <div className='button-text'>Done?</div>\r\n            )}\r\n            <svg\r\n              width='1.7em'\r\n              height='1.7em'\r\n              viewBox='0 0 16 16'\r\n              className='bi bi-check2-square'\r\n              fill='currentColor'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z'\r\n              />\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M1.5 13A1.5 1.5 0 0 0 3 14.5h10a1.5 1.5 0 0 0 1.5-1.5V8a.5.5 0 0 0-1 0v5a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V3a.5.5 0 0 1 .5-.5h8a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 3v10z'\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className='card-body bg-light'>\r\n          <h5 className='card-title'>{title}</h5>\r\n          {isDone && (\r\n            <div className='card-buttons'>\r\n              <button\r\n                onClick={() => clickTrashButton(todoId)}\r\n                className='button trash'\r\n                type='button'\r\n              >\r\n                <div>\r\n                  Delete?{' '}\r\n                  <svg\r\n                    width='1.7em'\r\n                    height='1.7em'\r\n                    viewBox='0 0 16 16'\r\n                    className='bi bi-trash'\r\n                    fill='currentColor'\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                  >\r\n                    <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n                    <path\r\n                      fillRule='evenodd'\r\n                      d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n  todoId: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","export const addTodo = (title, todoId) => ({\r\n  type: 'ADD_TODO',\r\n  payload: { title, todoId },\r\n});\r\n\r\nexport const deleteTodo = (todoId) => ({\r\n  type: 'DELETE_TODO',\r\n  payload: todoId,\r\n});\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TodoList.css';\r\n\r\nfunction TodoList() {\r\n  const todosArr = useSelector((state) => state.todoReducer);\r\n\r\n  return (\r\n    <div className='todo-list'>\r\n      {todosArr.map((todo) => (\r\n        <TodoListItem key={todo.id} title={todo.title} todoId={todo.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todosArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport uuid from 'uuid/v4';\r\n\r\nimport './TodoForm.css';\r\n\r\nimport { addTodo } from '../../redux/actions/actions';\r\n\r\nfunction TodoForm() {\r\n  const [title, setTitle] = useState('');\r\n  const todoId = uuid();\r\n  const dispatch = useDispatch();\r\n  const clickAddkButton = (title, todoId) => dispatch(addTodo(title, todoId));\r\n\r\n  const typeTitleText = useCallback(\r\n    (event) => {\r\n      setTitle(event.target.value);\r\n    },\r\n    [setTitle]\r\n  );\r\n\r\n  return (\r\n    <div className='input-group mb-3'>\r\n      <input\r\n        onChange={typeTitleText}\r\n        type='text'\r\n        className='form-control'\r\n        placeholder='New ToDo'\r\n        value={title}\r\n      />\r\n      <div className='input-group-append'>\r\n        <button\r\n          disabled={!title}\r\n          onClick={() => clickAddkButton(title, todoId, setTitle(''))}\r\n          className='btn btn-secondary'\r\n          type='button'\r\n        >\r\n          Add ToDo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoForm);\r\n","import React from 'react';\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport TodoForm from '../TodoForm/TodoForm';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className='container'>\n      <Header />\n      <TodoForm />\n      <TodoList />\n    </div>\n  );\n}\n","const initialState = [];\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'ADD_TODO':\r\n      return (state = [...state, { id: payload.todoId, title: payload.title }]);\r\n    case 'DELETE_TODO':\r\n      return (state = [...state.filter((todo) => todo.id !== payload)]);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { combineReducers } from 'redux';\r\nimport todoReducer from './todoReducer';\r\n\r\nconst reducers = combineReducers({\r\n  todoReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reducers from '../reducers/reducers'\r\n\r\nconst store = createStore(reducers, composeWithDevTools())\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}